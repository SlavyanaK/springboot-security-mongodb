buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
	baseName = 'spring-boot-security'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {

	compile('org.projectlombok:lombok:1.16.8')

	compile('org.springframework.boot:spring-boot-starter-actuator')
	// compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-devtools')

	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-jetty')
	compile('org.webjars:bootstrap:3.3.6')

	compile('org.mongodb:mongo-java-driver:3.2.2')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	//compile('org.jongo:jongo:1.2')  // as alternative to Spring Data MongoDB

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.hamcrest:hamcrest-library:1.3')
	// testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')

}

configurations.all {
	// we exclude Tomcat, because we use Jetty as servlet container
	exclude module: "spring-boot-starter-tomcat"
}

springBoot {
	mainClass = 'de.nava.demo.Application'
	excludeDevtools = true
}

bootRun {
	systemProperties System.properties
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}
